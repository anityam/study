{"pageProps":{"note":{"id":"88zf50v4q8nkcr279uqsr9i","title":"API","desc":"","updated":1705890382435,"created":1692832536320,"custom":{},"fname":"Kubernetes.API","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"ff2defeafe8ac85578cbd282105016f2","links":[],"anchors":{"kubernetes-api":{"type":"header","text":"Kubernetes API","value":"kubernetes-api","line":7,"column":0,"depth":1},"function":{"type":"header","text":"Function","value":"function","line":10,"column":0,"depth":2},"how":{"type":"header","text":"How","value":"how","line":16,"column":0,"depth":2},"what":{"type":"header","text":"What","value":"what","line":19,"column":0,"depth":2},"declare":{"type":"header","text":"Declare","value":"declare","line":37,"column":0,"depth":2},"query":{"type":"header","text":"Query","value":"query","line":40,"column":0,"depth":2},"api-operation":{"type":"header","text":"API Operation","value":"api-operation","line":48,"column":0,"depth":2},"cluster":{"type":"header","text":"Cluster","value":"cluster","line":49,"column":0,"depth":3},"api-calls":{"type":"header","text":"API calls","value":"api-calls","line":52,"column":0,"depth":3},"request":{"type":"header","text":"Request","value":"request","line":55,"column":0,"depth":2},"reading":{"type":"header","text":"Reading","value":"reading","line":60,"column":0,"depth":2},"working-repo":{"type":"header","text":"Working repo","value":"working-repo","line":64,"column":0,"depth":2}},"children":["ognetf4t332vazgadsvn0ir","x6d83azszdspwhrs6bwgsxb"],"parent":"kvfgz9sv96p3uqosotptdgk","data":{}},"body":"<h1 id=\"api\">API<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#api\"></a></h1>\n<h1 id=\"kubernetes-api\">Kubernetes API<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#kubernetes-api\"></a></h1>\n<p>Kubernetes api is the main communication channel for the kubernetes cluster. It is a part of the <code>kubernetes control plain</code>. This is the heart of communication</p>\n<h2 id=\"function\">Function<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#function\"></a></h2>\n<ol>\n<li>Serve the kubernetes API for state change\n<ol>\n<li>Reading state : get,list and streaming</li>\n<li>Mutating state: create, update delete</li>\n</ol>\n</li>\n<li>Proxy cluster component so other tools can use them like pod exec by kubectl or log streaming etc</li>\n</ol>\n<h2 id=\"how\">How<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#how\"></a></h2>\n<p>The main concept is api calls in kubernetes are <code>rest API</code> based calls exposed through https with json or <code>protobuf</code> payload. The rest method used are GET,POST,PUT, PATCH, DELETE.</p>\n<h2 id=\"what\">What<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#what\"></a></h2>\n<p>The terms used</p>\n<ol>\n<li>Kind: All resource types have a concrete representation (their object schema) which is called a kind --> or a simple definition is json-schema of an object\n<ol>\n<li>persistent object like pod, service etc</li>\n<li>list of persistent objects like pods </li>\n<li>Simple --> Special purpose kinds used like APIGroup or APIResource , or simply a specific action on a persistent resource(object)</li>\n</ol>\n</li>\n<li>Group: Collection of related kinds </li>\n<li>Version: The version of apiGroup to be used v1alpha1,  v1beta1 etc</li>\n<li>Resources: These are the endpoints of the kubernetes api api/{resource}. This can also be termed as an item of a <code>kind</code>\n<pre><code>kubectl api-resources\nkubectl api-resources -v 6 # -v 6 means \"extra verbose logging\"\n</code></pre>\n</li>\n<li>Objects: This is similar to kind which means persistent entities with intent (desired state) and the status (actual state) of the cluster. So it has some defined fields.\n<pre><code>kubectl explain  # commands helps with \n</code></pre>\n</li>\n</ol>\n<h2 id=\"declare\">Declare<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#declare\"></a></h2>\n<p>Declarative state in kubernetes. <code>Spec</code> describes what you want.<code>Status</code> is the current state of the resource you described in the <code>spec</code>.</p>\n<h2 id=\"query\">Query<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#query\"></a></h2>\n<p>API server can be queried through the REST http calls so once the api server endpoint is exposed we can query the\n<code>/apis/group/version/{namespace/namespace_name}/resource</code> --> namespaced resources need the namespace. For more info on the api-resources{endpoint}</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">kubectl api-resources\nkubectl api-versions\n</code></pre>\n<h2 id=\"api-operation\">API Operation<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#api-operation\"></a></h2>\n<h3 id=\"cluster\">Cluster<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#cluster\"></a></h3>\n<p>Creating a cluster for testing API code can be found at <a href=\"https://github.com/anityam/kubernetesGo\">kubernetesGo</a>.</p>\n<h3 id=\"api-calls\">API calls<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#api-calls\"></a></h3>\n<p>In daily </p>\n<h2 id=\"request\">Request<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#request\"></a></h2>\n<p>The request once done is passed through a chain of filters which is processed by <a href=\"https://github.com/kubernetes/kubernetes/blob/2cb31c9333adca3f212920d7a1a4e0a3a239598d/staging/src/k8s.io/apiserver/pkg/server/config.go#L790C6-L790C30\">DefaultBuildHandlerChain</a>. </p>\n<h2 id=\"reading\">Reading<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#reading\"></a></h2>\n<p><a href=\"https://kubernetes.io/docs/reference/using-api/api-concepts/#:~:text=Kubernetes%20API%20terminology&#x26;text=All%20resource%20types%20have%20a,also%20usually%20represents%20an%20object\">https://kubernetes.io/docs/reference/using-api/api-concepts/#:~:text=Kubernetes%20API%20terminology&#x26;text=All%20resource%20types%20have%20a,also%20usually%20represents%20an%20object</a> --> API\n<a href=\"https://iximiuz.com/en/posts/kubernetes-api-structure-and-terminology/\">https://iximiuz.com/en/posts/kubernetes-api-structure-and-terminology/</a> --> Terminologies</p>\n<h2 id=\"working-repo\">Working repo<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#working-repo\"></a></h2>\n<p><a href=\"https://github.com/anityam/kube-programming\">https://github.com/anityam/kube-programming</a> </p>\n<hr>\n<strong>Children</strong>\n<ol>\n<li><a href=\"/study/notes/ognetf4t332vazgadsvn0ir\">API Request</a></li>\n<li><a href=\"/study/notes/x6d83azszdspwhrs6bwgsxb\">Kind Resource and Groups</a></li>\n</ol>","noteIndex":{"id":"root","title":"root","desc":"","updated":1705329732869,"created":1595961348801,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"1dc37f517d4ed7428cb6cd839465a28a","links":[],"anchors":{},"children":["jb6glaqzhtlu81fjsdvclge","dgp0079geib2iw0p2lmhm1j","kvfgz9sv96p3uqosotptdgk"],"parent":null,"data":{},"body":"This is learning journal. The intend is to document concepts.\n`---`.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"dependencies/localhost/Herauna","selfContained":true,"name":"Herauna"},{"fsPath":".","selfContained":true,"name":"Dendron"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","assetsPrefix":"/study","siteUrl":"https://anityam.github.io","duplicateNoteBehavior":{"action":"useVault","payload":["Herauna","Dendron"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}